{
  "version": 1,
  "nodes": [
    {
      "id": 1,
      "name": "Canvas",
      "type": "graphics.canvas",
      "x": 50,
      "y": 50
    },
    {
      "id": 2,
      "name": "Background Color",
      "type": "graphics.backgroundColor",
      "x": 50,
      "y": 100
    },
    {
      "id": 3,
      "name": "Sequence",
      "type": "core.sequence",
      "x": 50,
      "y": 150
    },
    {
      "id": 5,
      "name": "Rectangle",
      "type": "graphics.rect",
      "x": 60,
      "y": 308,
      "values": {
        "width": 20,
        "height": 20,
        "color": [
          49,
          200,
          13,
          1
        ]
      }
    },
    {
      "id": 8,
      "name": "Load Image",
      "type": "image.loadImage",
      "x": 256,
      "y": 45,
      "values": {
        "file": "assets/kriskross.png"
      }
    },
    {
      "id": 9,
      "name": "Draw Image",
      "type": "image.drawImage",
      "x": 269,
      "y": 297
    },
    {
      "id": 10,
      "name": "Pose Body Part",
      "type": "ml.poseBodyPart",
      "x": 143,
      "y": 231,
      "values": {
        "bodyPart": "leftEar"
      }
    },
    {
      "id": 11,
      "name": "Pose Net",
      "type": "ml.poseNet",
      "x": 257,
      "y": 89,
      "values": {
        "detectType": "multi"
      }
    }
  ],
  "connections": [
    {
      "outNode": 1,
      "outPort": "out",
      "inNode": 2,
      "inPort": "in"
    },
    {
      "outNode": 2,
      "outPort": "out",
      "inNode": 3,
      "inPort": "in"
    },
    {
      "outNode": 3,
      "outPort": "out1",
      "inNode": 9,
      "inPort": "in"
    },
    {
      "outNode": 3,
      "outPort": "out2",
      "inNode": 5,
      "inPort": "in"
    },
    {
      "outNode": 8,
      "outPort": "image",
      "inNode": 9,
      "inPort": "image"
    },
    {
      "outNode": 8,
      "outPort": "image",
      "inNode": 11,
      "inPort": "image"
    },
    {
      "outNode": 3,
      "outPort": "out4",
      "inNode": 11,
      "inPort": "in"
    },
    {
      "outNode": 11,
      "outPort": "poses",
      "inNode": 10,
      "inPort": "poses"
    },
    {
      "outNode": 10,
      "outPort": "x",
      "inNode": 5,
      "inPort": "x"
    },
    {
      "outNode": 10,
      "outPort": "y",
      "inNode": 5,
      "inPort": "y"
    },
    {
      "outNode": 3,
      "outPort": "out3",
      "inNode": 10,
      "inPort": "in"
    }
  ],
  "types": [
    {
      "name": "Custom",
      "type": "project.custom",
      "source": "// returns the location of body part\nconst ml5 = require('ml5');\nconst triggerIn = node.triggerIn('in');\nconst imageIn = node.imageIn('image');\nconst bodyPartIn = node.selectIn('bodyPart', ['leftAnkle', 'leftEar', 'leftElbow', 'leftEye', 'leftHip', 'leftKnee', 'leftShoulder','leftWrist','nose','rightAnkle', 'rightEar', 'rightElbow', 'rightEye', 'rightHip', 'rightKnee', 'rightShoulder','rightWrist']);\nconst xOut = node.numberOut('x', 0);\nconst yOut = node.numberOut('y', 0);\nlet poseNet;\nlet poses = [];\nlet options = {\n\timageScaleFactor: 0.9,\n\tminConfidence: 0.05,\n\t maxPoseDetections: 4,\n\t outputStride: 16\n\t }\n\nnode.onStart = () => {\n  poseNet = ml5.poseNet(modelReady, options);\n  poseNet.on('pose', function (results) {\n     poses = results;\n  });\n}\n        \nfunction modelReady() {\n   console.log(\"Model Loaded!\");\n  if (imageIn.value) {\n   poseNet.multiPose(imageIn.value);\n  }\n}\n\nfunction isBodyPart(bp) { \n   return bp.part === bodyPartIn.value;\n}\n      \ntriggerIn.onTrigger = (props) => {\n   const { canvas, ctx } = props;\n   if(poses.length>0){\n     const part = poses[0].pose.keypoints.find(isBodyPart);\n     let px = part.position.x;\n     let py = part.position.y;\n        xOut.set(px);\n        yOut.set(py);\n   }\n};\n\nimageIn.onChange = () => {\n   poseNet.multiPose(imageIn.value);\n}",
      "description": "returns the location of body part"
    }
  ]
}