name: Build and Release

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Create electron-builder.env file
        run: |
          echo "APPLE_ID=${{ secrets.APPLE_ID }}" >> electron-builder.env
          echo "APPLE_APP_SPECIFIC_PASSWORD=${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}" >> electron-builder.env
          echo "APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }}" >> electron-builder.env

      - name: Build
        run: npm run build

      - name: Build Electron app
        run: npm run dist-${{ matrix.os == 'macos-latest' && 'mac' || 'win' }}
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          APPLE_ASC_PROVIDER: ${{ secrets.APPLE_ASC_PROVIDER }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Figment-${{ startsWith(github.ref, 'refs/tags/') && format('{0}.{1}', github.ref_name, matrix.os == 'macos-latest' && 'dmg' || 'exe') || format('{0}-latest.{1}', 'figment', matrix.os == 'macos-latest' && 'dmg' || 'exe') }}
          asset_name: Figment-${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'latest' }}.${{ matrix.os == 'macos-latest' && 'dmg' || 'exe' }}
          asset_content_type: application/octet-stream

      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: figment-${{ matrix.os == 'macos-latest' && 'macos' || 'windows' }}
          path: ./dist/*.${{ matrix.os == 'macos-latest' && 'dmg' || 'exe' }}
          if-no-files-found: error

  create-release:
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
